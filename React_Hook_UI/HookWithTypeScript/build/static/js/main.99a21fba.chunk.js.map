{"version":3,"sources":["page/home/index.less","components/Layout/Nav/index.tsx","components/Layout/index.tsx","page/home/index.tsx","components/StartSpace/index.tsx","page/index/index.tsx","page/recipe/manager-list/component/List/index.tsx","page/recipe/manager-list/index.tsx","page/recipe/edit-recipe/component/HandleInputWork/index.tsx","page/recipe/edit-recipe/component/LabelBtn/index.tsx","page/recipe/edit-recipe/component/BasicForm/index.tsx","page/recipe/edit-recipe/index.tsx","router/index.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Nav","props","className","to","Layout","hash","window","location","useState","isNav","setIsNav","useEffect","addEventListener","console","log","children","Home","StartSpace","start","document","getElementById","classList","add","innerHTML","randomSize","randomLeft","randomTop","opacity","animation","num","doms","i","Math","floor","random","getStarts","id","Index","Recipe","columns","title","dataIndex","key","render","t","style","width","height","src","alt","r","status","type","dataSource","recipeName","recipePic","content","rowKey","margin","HandleInputWork","List","name","fields","remove","map","field","index","Item","label","required","validateTrigger","rules","whitespace","message","noStyle","placeholder","length","MinusCircleOutlined","onClick","PlusOutlined","LabelBtn","onChange","TextArea","Input","layout","labelCol","span","wrapperCol","tailLayout","offset","BasicForm","initialValues","remember","onFinish","values","onFinishFailed","errorInfo","Option","value","initialValue","Group","valuePropName","getValueFromEvent","e","Array","isArray","fileList","extra","action","listType","UploadOutlined","marginRight","htmlType","TabPane","Tabs","tabs","tab","disabled","EditRecipe","defaultActiveKey","item","HRouter","path","pathName","exact","component","Boolean","hostname","match","ReactDOM","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.99a21fba.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/index.0368bf6a.less\";","import React from 'react';\nimport './index.css';\nimport { Link } from 'react-router-dom'\ninterface Props{}\nconst Nav:React.FC<Props>=(props)=>{\n    return (\n        <div className=\"header\"> \n           项目集\n           <div className=\"nav\">\n              <Link to=\"/home\">home</Link>\n              <Link to=\"/recipe\">食谱</Link>\n              <Link to=\"/\">退出</Link>\n           </div>\n        </div>\n    )\n}\n\nexport default Nav;","import React,{useEffect,useState} from 'react'\nimport Nav from './Nav'\nimport  './index.css'\n\ninterface Props{}\nconst Layout:React.FC<Props>=(props)=>{\n    const { location: { hash } } = window;\n    const [isNav,setIsNav] = useState(false)\n    useEffect(()=>{\n        if(hash&&hash!=='#/'){\n            setIsNav(true)\n        }\n        window.addEventListener('hashchange',()=>{\n            const { location: { hash } } = window;\n            if(hash!=='#/'){\n                setIsNav(true)\n            }else{\n                setIsNav(false)\n            }\n        })\n    })\n\n    console.log(isNav,'isNav');\n    return (\n        <div className=\"layout\">\n            {isNav&&<Nav></Nav>}\n            {props.children}\n        </div>\n    )\n}\n\nexport default Layout;","import React from 'react'\nimport Page2 from '../page2'\nimport { HashRouter as Router , Route, Link } from \"react-router-dom\";\nimport './index.less'\n\ninterface Props{\n\n}\nconst Home:React.FC<Props>=(props)=> {\n    return (\n        <div className=\"home_wrapper\">\n             首页\n        </div>\n    )\n}\n\nexport default Home;","import React,{useState,useEffect,useMemo} from 'react'\nimport './index.css'\ninterface Props{\n   \n}\n\nfunction getStarts(num=100){\n    let doms = \"\",\n    randomSize,\n    randomLeft,\n    randomTop,\n    opacity,\n    animation;\n    for(let i=0;i<num;i++){\n        randomTop = Math.floor(Math.random()*100) + '%';\n        randomLeft = Math.floor(Math.random()*100) + '%';\n        randomSize = Math.floor(Math.random()*10) + 'px';\n        opacity = Math.random()*10;\n        animation = `aniStart ${Math.random()*10+3}s ease-in-out infinite` \n        doms += `\n           <div \n               class=\"startSty heart\"\n               style=\"\n               top:${randomTop};\n               left:${randomLeft};\n               width:${randomSize};\n               height:${randomSize};\n               animation:${animation};\n               opacity:${opacity}\n           \" ></div>\n        `\n    }\n    return doms\n\n}\n\nconst StartSpace:React.FC<Props> =()=> {\n    useEffect(()=>{\n      const start =  document.getElementById('start');\n      if(start){\n          start.classList.add('start_wrapper_comeIn')\n          start.innerHTML = getStarts(100) \n      }\n    },[])\n    return (\n        <div className=\"start_wrapper\" id=\"start\"></div>\n    )\n}\nexport default StartSpace;","import React from 'react'\nimport {  Link } from \"react-router-dom\";\nimport StartSpace from '../../components/StartSpace';\nimport './index.css';\n\ninterface Props{\n   name:string\n}\n\nconst Index:React.FC<Props>=(props)=>{\n    return (\n        <div className=\"index_wrapper\">\n            <div className=\"text_wrapper\">\n                    hello，你来啦,\n                     <br/>\n                    <Link to=\"/home\" className=\"into_text_color\">点击进入</Link>\n            </div>\n             <StartSpace/>\n        </div>\n    )\n}\n\nexport default Index;","import React from 'react'\nimport {Button,Table,Divider} from 'antd';\nimport {  Link } from \"react-router-dom\";\nimport './index.css'\n\ninterface Props{\n}\n\nconst Recipe:React.FC<Props>=(props)=>{\n\n    const data = [{\n        id:1,  // 食谱id\n        recipeName:'拔丝地瓜',\n        recipePic:\"https://ss2.bdstatic.com/70cFvnSh_Q1YnxGkpoWK1HF6hhy/it/u=892160461,3145855963&fm=26&gp=0.jpg\",\n        status: '1',  // 状态 ： 开发中 |  已上线  上架 1 下架 0 , 上架之后只有查看， 下架后是编辑\n        content:\"拔丝地瓜真好吃\"\n    }]\n\n    const columns = [{\n        title:'ID',\n        dataIndex:'id',\n        key:'id',\n    },{\n        title:'名称',\n        dataIndex:'recipeName',\n        key:'recipeName',\n    },{\n        title:'图片',\n        dataIndex:'recipePic',\n        key:'recipePic',\n        render:(t:string)=><img style={{width:150,height:150}} src={t} alt={t}></img>\n    },{\n        title:'内容',\n        dataIndex:'content',\n        key:'content',\n        width:500\n    },{\n        title:'状态',\n        dataIndex:'status',\n        key:'status',\n        render:(t:string)=>t==='1'?'已上架':'开发中'\n    },{\n        title:'操作',\n        key:'operation',\n        render:(t:any,r:any)=>{\n            if(r.status==='1'){\n                return <>\n                <Button type=\"link\">查看</Button>\n                <Divider type=\"vertical\"/>\n                <Button type=\"link\">下架</Button>\n                </>\n            }else{\n                return <>\n                <Button type=\"link\">编辑</Button>\n                <Divider type=\"vertical\"/>\n                <Button type=\"link\">上架</Button>\n                </>\n            }\n        }\n    }]\n\n    return (\n        <div className=\"wrapper-list\"> \n            <div className=\"header\">\n               <h3>内容列表</h3>\n               <Link to=\"editRecipe\">\n                  <Button type=\"primary\">新增食谱</Button>\n               </Link>\n            </div>\n             <Table \n                columns={columns}\n                dataSource={data}\n                rowKey=\"id\"\n              />\n        </div>\n    )\n}\n\nexport default Recipe;","import React from 'react'\nimport List from './component/List';\nimport './index.css'\n\ninterface Props{\n}\n\nconst Recipe:React.FC<Props>=(props)=>{\n    return (\n        <div className=\"wrapper\"> \n             <h2 style={{margin:20}}>编辑列表</h2>\n             <List/>\n        </div>\n    )\n}\n\nexport default Recipe;","import React from 'react'\nimport './index.css'\nimport { Form, Input, Button, Checkbox,Select,Radio,Upload } from 'antd';\nimport { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\n\nconst layout = {\n    labelCol: { span: 0 },\n    wrapperCol: { span: 9 },\n};\n\ninterface Props{\n}\n\nconst HandleInputWork:React.FC<Props>=(props)=>{\n\n    return (\n        <div className=\"wrapper\">\n        <Form.List name=\"recipeIngredientList[0].foodName\">\n            {(fields, { add, remove }) => {\n            return (\n                <div>\n                {fields.map((field, index) => (\n                    <Form.Item\n                    label={index === 0 ? '' : ''}\n                    required={false}\n                    key={field.key}\n\n                    >\n                    <Form.Item\n                        {...field}\n                        validateTrigger={['onChange', 'onBlur']}\n                        // name='foodname'\n                        rules={[\n                        {\n                            required: true,\n                            whitespace: true,\n                            message: \"Please input passenger's name or delete this field.\",\n                        },\n                        ]}\n                        noStyle\n                    >\n                        <Input placeholder=\"passenger name\" style={{ width: '60%' }} />\n                    </Form.Item>\n                    {fields.length > 1 ? (\n                        <MinusCircleOutlined\n                        className=\"dynamic-delete-button\"\n                        style={{ margin: '0 8px' }}\n                        onClick={() => {\n                            remove(field.name);\n                        }}\n                        />\n                    ) : null}\n                    </Form.Item>\n                ))}\n                <Form.Item>\n                    <Button\n                    type=\"dashed\"\n                    onClick={() => {\n                        add();\n                    }}\n                    style={{ width: '60%' }}\n                    >\n                    <PlusOutlined /> Add field\n                    </Button>\n                </Form.Item>\n                </div>\n            );\n            }}\n        </Form.List>\n        </div>\n    )\n}\n\nexport default HandleInputWork;","import React,{useEffect} from 'react'\nimport {Button} from 'antd';\nimport './index.css'\n\ninterface Props{\n    value?:number;\n    onChange?:any\n}\n\nconst LabelBtn:React.FC<Props>=(props)=>{\n    console.log(props,'props');\n\n    useEffect(() => {\n        props.onChange([1])\n    }, [])\n    \n    const triger = (e: number)=>{\n        // props.onChange([1])\n        props.onChange([1])\n    }\n    return (\n        <div className=\"label-wrapper\"> \n            <Button>热菜</Button>\n        </div>\n    )\n}\n\nexport default LabelBtn;","import React from 'react'\nimport { HashRouter as Router , Route, Link } from \"react-router-dom\";\nimport { Form, Input, Button, Checkbox,Select,Radio,Upload } from 'antd';\nimport { UploadOutlined, InboxOutlined } from '@ant-design/icons';\nimport HandleInputWork from '../HandleInputWork';\nimport LabelBtn from '../LabelBtn';\nconst {TextArea} = Input\nconst layout = {\n    labelCol: { span: 2 },\n    wrapperCol: { span: 9 },\n};\nconst tailLayout = {\n   wrapperCol: { offset:2, span: 8 },\n};\ninterface Props{\n\n}\nconst BasicForm:React.FC<Props>=(props)=> {\n\n    const onFinish = (values: any)=> {\n        console.log('Success:', values);\n      };\n    \n      const onFinishFailed = (errorInfo: any) => {\n        console.log('Failed:', errorInfo);\n      };\n    \n      const normFile = (e: { fileList: any; }) => {\n        console.log('Upload event:', e);\n        if (Array.isArray(e)) {\n          return e;\n        }\n        return e && e.fileList;\n      };\n    return (\n        <div>\n            <Form\n                {...layout}\n                name=\"basic\"\n                initialValues={{ remember: true }}\n                onFinish={onFinish}\n                onFinishFailed={onFinishFailed}\n            >\n                <Form.Item\n                    label=\"食谱名称\"\n                    name=\"username\"\n                    rules={[{ required: true, message: '食谱名称不能为空!' }]}\n                    >\n                    <Input placeholder=\"请填写食谱名称\"/>\n                </Form.Item>\n                <Form.Item\n                    label=\"设备品类\"\n                    name=\"devType\"\n                    rules={[{ required: true, message: '设备品类不能为空!' }]}\n                    >\n                    <Select placeholder=\"请选择设备品类\">\n                        <Select.Option value=\"1\">高压锅</Select.Option>\n                        <Select.Option value=\"2\">电饼铛</Select.Option>\n                    </Select>\n                </Form.Item>    \n                <Form.Item label=\"图文类型\" \n                name=\"recipeType\"\n                rules={[{ required: true, message: '图文类型不能为空!' }]}\n                initialValue=\"1\"\n                >\n                <Radio.Group>\n                  <Radio value=\"1\">图文</Radio>\n                  <Radio value=\"0\">视频</Radio>\n                </Radio.Group>\n              </Form.Item>\n              <Form.Item\n                name=\"recipePic\"\n                label=\"食品封面\"\n                valuePropName=\"fileList\"\n                getValueFromEvent={normFile}\n                rules={[{ required: true, message: '食品封面不能为空!' }]}\n                extra=\"支持240*375px,jpg/jepg/png格式,最大不超过5M\"\n                >\n                <Upload name=\"file\" action=\"https://bizapi.csdn.net/blog-console-api/v3/upload/img?shuiyin=2\" listType=\"picture\">\n                    <Button>\n                       <UploadOutlined />上传文件\n                    </Button>\n                </Upload>\n                </Form.Item>\n                <Form.Item\n                    label=\"介绍说明\"\n                    name=\"content\"\n                    rules={[{ required: true, message: '介绍说明不能为空!' }]}\n                    >\n                     <TextArea placeholder=\"请填写介绍说明\"/>\n                </Form.Item>\n                <Form.Item\n                    label=\"小贴士\"\n                    name=\"tip\"\n                    >\n                      <TextArea placeholder=\"请填写小贴士\"/>\n                </Form.Item>\n                <Form.Item\n                 label=\"选择标签\"\n                 name='tagIdList'\n                 valuePropName=\"value\"\n                 initialValue={[]}\n                 rules={[{ required: true, message: '标签不能为空!' }]}\n                >\n                    <LabelBtn/>\n                </Form.Item>\n                <Form.Item \n                 name=\"recipeIngredientList\"\n                 label=\"食材准备\"     \n                 initialValue={[]}            \n                 rules={[{ required: true, message: '食材准备不能为空!' }]}\n                >\n                   <HandleInputWork/>\n               </Form.Item>\n\n                <Form.Item {...tailLayout}>\n                   <Link to=\"/recipe\">\n                    <Button type=\"default\" style={{marginRight:20}}>取消</Button>\n                    </Link>\n                    <Button type=\"primary\" htmlType=\"submit\">\n                      保存\n                    </Button>\n              </Form.Item>\n            </Form>\n        </div>\n    )\n}\n\nexport default BasicForm;","import React from 'react'\nimport './index.css'\nimport {Link } from \"react-router-dom\";\nimport BasicForm from './component/BasicForm'\nimport { Tabs } from 'antd';\nconst { TabPane } = Tabs;\n\ninterface Props{\n}\n\nconst tabs = [{\n    tab:'基本信息',key:\"1\",disabled:false,content:<BasicForm/>\n},{\n    tab:'创建步骤',key:\"2\",disabled:false,content:'step'\n}]\n\nconst EditRecipe:React.FC<Props>=(props)=>{\n\n    return (\n        <div className=\"wrapper\"> \n             <h2 style={{margin:20}}>编辑食谱</h2>\n             <Tabs defaultActiveKey=\"1\">\n                 {\n                    tabs.map(item=><TabPane {...item}>{item.content}</TabPane>)\n                 }\n             </Tabs>\n        </div>\n    )\n}\n\nexport default EditRecipe;","\nimport React from 'react'\nimport { HashRouter as Router , Route, Link } from \"react-router-dom\";\nimport Layout from '../components/Layout'\nimport Home from '../page/home';\n\nimport Index from '../page/index';\nimport Recipe from '../page/recipe/manager-list';\nimport EditRecipe from '../page/recipe/edit-recipe';\nimport Page2 from '../page/page2';\n\ninterface Props{}\nconst HRouter:React.FC<Props>=(props)=>{\n    return (\n    <Router>\n          <Layout>\n           <Route path=\"/\" pathName=\"index\" name=\"index\" exact component={Index}></Route>\n            <Route path=\"/home\" component={Home}></Route>\n            <Route path=\"/recipe\"  component={Recipe}></Route>\n            <Route path=\"/editRecipe\"  component={EditRecipe}></Route>\n        </Layout>\n     </Router>\n    )\n}\n\nexport default HRouter;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'antd/dist/antd.css'\nimport App from './App';\nimport HRouter from './router'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  // <React.StrictMode>\n    <HRouter />,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}