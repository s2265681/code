{"version":3,"sources":["components/Button/button.tsx","components/Alert/alert.tsx","components/Menu/menu.tsx","components/Menu/menuItem.tsx","components/Icon/icon.tsx","components/Menu/subMenu.tsx","components/Tabs/tabs.tsx","components/Tabs/tabsItem.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["ButtonSize","ButtonType","Button","props","btnType","className","disabled","size","href","children","restProps","classes","classNames","Link","defaultProps","AlertType","Alert","type","message","Success","MenuContext","createContext","index","Menu","defaultIndex","mode","style","onSelect","defaultOpenSubMenus","useState","currentActive","setActive","passedContext","data-testid","Provider","value","React","Children","map","child","childElement","displayName","cloneElement","toString","console","error","MenuItem","context","useContext","onClick","library","add","fas","Icon","theme","SubMenu","timer","title","openedSubMenus","isOpend","includes","menuOpen","setOpen","handleMouse","e","toggle","clearTimeout","preventDefault","setTimeout","clickEvents","hoverEvents","onMouseEnter","onMouseLeave","key","icon","subMenuClasses","childrenComponent","i","renderChildren","TabsContext","Tabs","childrenElement","TabsItem","label","display","App","Small","autoFocus","Primary","Dashed","Default","Large","Danger","target","Error","Info","Warning","log","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.934d07b0.chunk.js","sourcesContent":["import React,{ButtonHTMLAttributes,AnchorHTMLAttributes,FC,ReactNode} from \"react\";\nimport classNames from \"classnames\";\nexport enum ButtonSize {\n    Large = \"lg\",\n    Small = \"sm\",\n}\n\nexport enum ButtonType {\n  Primary = \"primary\",\n  Default = \"default\",\n  Dashed = \"dashed\",\n  Danger = \"danger\",\n  Link = \"link\",\n}\n\ninterface BaseButtonProps {\n  className?: string;\n  /**设置 Button 的禁用 */\n  disabled?: boolean;\n  /**设置 Button 的尺寸 */\n  size?: \"lg\" | \"sm\";\n  // btnType?: ButtonType;\n  /**设置 Button 的类型 */\n  btnType?: \"primary\" | \"default\" | \"dashed\" | \"danger\" | \"link\";\n  children: ReactNode;\n  href?: string;\n}\n\n\n\ntype NaticeButonProps = BaseButtonProps & ButtonHTMLAttributes<HTMLElement>\ntype AnchorButtonProps = BaseButtonProps & AnchorHTMLAttributes<HTMLElement>\nexport type ButtonProps = Partial<NaticeButonProps & AnchorButtonProps>;  // 改为可选\n/**\n * 这是我们的第一个Button组件\n * ## Button header\n * ~~~js\n * import {BUtton} from 'rockui'\n * ~~~\n */\nexport const Button: FC<ButtonProps> = (props) => {\n  const { btnType,className, disabled, size, href,  children , ...restProps} = props;\n  // btn , btn-lg , btn-primary\n  const classes = classNames(\"btn\", className , {\n    [`btn-${btnType}`]: btnType, // btnType存在就添加上这个[`btn-${btnType}`] class\n    [`btn-${size}`]: size,\n    disabled: btnType === ButtonType.Link && disabled,\n  });\n\n  if (btnType === ButtonType.Link && href) {\n    return (\n      <a href={href} className={classes} {...restProps}>\n        {children}\n      </a>\n    );\n  } else {\n    return <button className={classes} disabled={disabled}  {...restProps}>{children}</button>;\n  }\n};\n\n\nButton.defaultProps = {\n    disabled:false,\n    btnType: \"default\"\n}\n\nexport default Button;","import React from \"react\";\nimport classNames from \"classnames\";\n\nexport enum AlertType {\n    Success = \"success\",\n    Info = \"info\",\n    Warning = \"warning\",\n    Error = \"error\"\n  }\n\n  interface BaseAlertProps {\n    className?: string;\n    type?:AlertType;\n    message?:string;\n  }\n  type NaticeDivProps = BaseAlertProps & React.BaseHTMLAttributes<HTMLElement>\n  export type AlertProps = Partial<NaticeDivProps>;  // 改为可选\n\n  const Alert:React.FC<AlertProps>=(props)=>{\n     const {type,className,message,...restProps} = props;\n     const classes = classNames(\"alert\",className,{\n         [`alert-${type}`]:type\n     })\n     return(\n         <div className={classes} {...restProps}>\n             {message}\n         </div>\n     )\n  }\n\n  Alert.defaultProps={\n    type:AlertType.Success,\n    message:'please input message'\n  }\n\n  export default Alert;","import React,{createContext,useState} from \"react\";\nimport classNames from \"classnames\";\nimport {MenuItemProps} from './menuItem'\n\ntype MenuMode = 'horizontal' | 'vertical'\ntype SelectCallback = (selectedIndex:string) => void;\n\n\nexport interface MenuProps{\n    defaultIndex?:string;\n    className?:string;\n    mode?:MenuMode;\n    style?:React.CSSProperties;\n    onSelect?:SelectCallback;\n    defaultOpenSubMenus?:string[]\n}\n\ninterface IMenuContext{\n    index:string;\n    onSelect?:SelectCallback;\n    mode?:MenuMode;\n    defaultOpenSubMenus?:string[]\n}\n\nexport const MenuContext = createContext<IMenuContext>({index:'0'})\n\nconst Menu:React.FC<MenuProps>=(props)=>{\n   const {defaultIndex,className,mode,style,children,onSelect,defaultOpenSubMenus} = props;\n   const [currentActive,setActive] = useState(defaultIndex)\n   \n   const classes = classNames('menu',className,{\n       'menu-vertical':mode === 'vertical',\n       'menu-horizontal':mode !== 'vertical'\n   })\n   \n   const handleClick = (index:string) =>{\n      setActive(index)\n      if(onSelect)onSelect(index)\n   }\n\n   const passedContext:IMenuContext={\n       index:currentActive||'0',\n       onSelect:handleClick,\n       mode:mode,\n       defaultOpenSubMenus\n   }\n\n\nconst renderChildren=()=>{\n    return React.Children.map(children ,(child,index)=>{\n        // 类型断言，转成FunctionComponentElement\n        const childElement = child as React.FunctionComponentElement<MenuItemProps>\n        // childElement.type.displayName\n        const {displayName} =  childElement.type\n        if(displayName==='MenuItem'||displayName==='SubMenu'){\n            // return child\n            return React.cloneElement(childElement,{\n                index:index.toString()\n            })\n        }else{\n            console.error('Warning:Menu has a child which is not a MenuItem component');\n        }\n    })\n }\n   return (\n       <ul className={classes} style={style} data-testid=\"test-menu\">\n         <MenuContext.Provider value={passedContext}>\n            {renderChildren()}\n          </MenuContext.Provider>\n       </ul>\n   )\n}\nMenu.defaultProps={\n    defaultIndex:'0',\n    mode:'horizontal',\n    defaultOpenSubMenus:[]\n}\n\nexport default Menu;","import React,{useContext} from \"react\";\nimport classNames from \"classnames\";\nimport {MenuContext} from './menu'\n\nexport interface MenuItemProps {\n  index?: string;\n  disabled?: boolean;\n  className?: string;\n  style?: React.CSSProperties;\n}\n\nconst MenuItem: React.FC<MenuItemProps> = (props) => {\n  const { index, className, disabled, style, children } = props;\n  const context = useContext(MenuContext)\n\n  const classes = classNames(\"menu-item\", className, {\n    \"is-disabled\": disabled,\n    \"is-active\": context.index === index,\n  });\n  const handleClick=()=>{\n      if(context.onSelect&&!disabled&&(typeof index==='string')){\n          context.onSelect(index)\n      }\n  }\n  return (\n    <li className={classes} style={style} onClick={handleClick}>\n      {children}\n    </li>\n  );\n};\nMenuItem.defaultProps = {\n  index: '0',\n};\n\nMenuItem.displayName='MenuItem'\nexport default MenuItem;\n","import React from \"react\";\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { fas } from '@fortawesome/free-solid-svg-icons'\n\nimport classNames from \"classnames\";\nimport { FontAwesomeIcon,FontAwesomeIconProps } from '@fortawesome/react-fontawesome'\nlibrary.add(fas)\n// import { faCoffee } from '@fortawesome/free-solid-svg-icons'\nexport type ThemeProps = 'primary' | 'secondary' | 'success' | 'info'|'danger' |'warning';\n\nexport interface IconProps extends FontAwesomeIconProps{\n    theme?:ThemeProps\n}\n\nconst Icon:React.FC<IconProps>=(props)=>{\n    // icon-primary\n    const {className,theme,...restProps} = props;\n    const classes = classNames('rock-icon',className,{\n        [`icon-${theme}`]:theme\n    })\n    return(\n        <FontAwesomeIcon className={classes} {...restProps}/>\n    )\n}\n\nexport default Icon;","import React,{useContext,useState, ReactElement} from \"react\";\nimport classNames from \"classnames\";\nimport {MenuContext} from './menu'\nimport {MenuItemProps} from './menuItem'\nimport Icon from '../Icon/icon'\n\nexport interface SubMenuProps{\n    index?:string;\n    title:ReactElement|string;\n    className?:string;\n}\n\nconst SubMenu:React.FC<SubMenuProps>=({index,title,children,className})=>{\n    const context = useContext(MenuContext)\n    const openedSubMenus = context.defaultOpenSubMenus as Array<string>\n    const isOpend = (index && context.mode ==='vertical')?openedSubMenus.includes(index):false\n    const [menuOpen,setOpen]= useState(isOpend)\n\n    const classes = classNames(\"menu-item submenu-item\", className, {\n        \"is-active\": context.index === index,\n        \"is-vitical\":context.mode ==='vertical',\n        'menu-open':menuOpen,\n    });\n\n    const handleClick=(e:React.MouseEvent)=>{\n        e.preventDefault()\n        setOpen(!menuOpen)\n        if(context.onSelect&&(typeof index==='number')){\n            context.onSelect(index)\n        }\n    }\n\n    let timer:any;\n    const handleMouse=(e:React.MouseEvent,toggle:boolean)=>{\n        clearTimeout(timer)\n        e.preventDefault()\n        timer=setTimeout(()=>{\n             setOpen(toggle)\n        },300)\n    }\n    const clickEvents = context.mode === 'vertical' ? {\n        onClick:handleClick\n    }:{}\n    const hoverEvents = context.mode !== 'vertical' ? {\n       onMouseEnter:(e:React.MouseEvent)=>{ handleMouse(e,true)},\n       onMouseLeave:(e:React.MouseEvent)=>{ handleMouse(e,false)}\n    }:{}\n    const renderChildren=()=>{\n        const subMenuClasses = classNames('submenu',{\n            'menu-open':menuOpen,\n\n        })\n        const childrenComponent = React.Children.map(children,(child,i)=>{\n            const childElement = child as React.FunctionComponentElement<MenuItemProps>\n            const {displayName} =  childElement.type\n            if(displayName==='MenuItem'){\n                return React.cloneElement(childElement,{\n                    index:`${index}-${i}`\n                })\n            }else{\n                console.error('Warning:SubMenu has a child which is not a MenuItem component');\n            }\n        })\n        return(\n            <ul className={subMenuClasses}>\n                 {childrenComponent}\n            </ul>\n        )\n    }\n    return(\n       <li key={index} className={classes} {...hoverEvents}>\n         <div className=\"submenu-title\" {...clickEvents}>\n           {title}\n           <Icon icon='angle-down' className=\"down-icon\" theme=\"primary\" size=\"1x\"/>\n           {renderChildren()}\n         </div>\n       \n       </li> \n    )\n}\n\nSubMenu.displayName = \"SubMenu\"\nexport default SubMenu;","import React,{createContext,useState, ReactElement, FunctionComponentElement} from \"react\";\nimport classNames from \"classnames\";\nimport {TabsItemProps} from './tabsItem'\ntype SelectCallback = (selectedIndex:number) => void;\n\nexport interface TabsProps{\n    defaultIndex?:number;\n    className?:string;\n    style?:React.CSSProperties;\n    onSelect?:SelectCallback;\n}\n\n\ninterface ITabsContext{\n    index:number;\n    onSelect?:SelectCallback;\n}\nexport const TabsContext = createContext<ITabsContext>({index:0})\n\nconst Tabs:React.FC<TabsProps>=(props)=>{\n    const {defaultIndex,className,style,children,onSelect} = props;\n    const [currentActive,setActive] = useState(defaultIndex)\n    const classes = classNames('tabs',className)\n    const handleClick = (index:number) =>{\n        setActive(index)\n        if(onSelect)onSelect(index)\n     }\n     const passedContext:ITabsContext={\n        index:currentActive||0,\n        onSelect:handleClick,\n    }\n    const renderChildren=()=>{\n        return React.Children.map(children,(child,index)=>{\n            let childrenElement = child as React.FunctionComponentElement<TabsItemProps>\n            return React.cloneElement(childrenElement,{index})\n        })\n    }\n    return (\n        <ul className={classes} style={style} data-testid=\"test-tabs\">\n            <TabsContext.Provider value={passedContext}>\n                {renderChildren()}\n            </TabsContext.Provider>\n        </ul>\n    )\n}\n\nexport default Tabs;\n\n","import React,{useContext} from \"react\";\nimport classNames from \"classnames\";\nimport {TabsContext} from './tabs'\n\nexport interface TabsItemProps {\n    index?: number;\n    disabled?: boolean;\n    className?: string;\n    style?: React.CSSProperties;\n    label?:string;\n  }\n\nconst TabsItem: React.FC<TabsItemProps> = (props) => {\n    const { index, className, disabled, style, children,label } = props;\n    const context = useContext(TabsContext)\n    const classes = classNames(\"tabs-item\", className, {\n      \"is-disabled\": disabled,\n      \"is-active\": context.index === index,\n    });\n    const handleClick=()=>{\n        if(context.onSelect&&!disabled&&(typeof index==='number')){\n            context.onSelect(index)\n        }\n    }\n    return (\n      <div className=\"tab-item-wrapper\">\n        <li className={classes} style={style} onClick={handleClick}>\n          {label}\n        </li>\n        <div style={{display: context.index === index?'block':'none'}}>\n           {children}\n        </div>\n      </div>\n    );\n  };\n  TabsItem.defaultProps = {\n    index: 0,\n  };\n  \n  TabsItem.displayName='TabsItem'\n  export default TabsItem;\n  ","import React from \"react\";\nimport \"./App.css\";\nimport Button, { ButtonSize, ButtonType } from \"./components/Button/button\";\nimport Alert, { AlertType } from \"./components/Alert/alert\";\nimport Menu from \"./components/Menu/menu\";\nimport MenuItem from \"./components/Menu/menuItem\";\nimport SubMenu from \"./components/Menu/subMenu\";\nimport TabItem from \"./components/Tabs/tabsItem\";\nimport Tabs from \"./components/Tabs/tabs\";\nimport Icon from './components/Icon/icon'\n\n\n// import { faCheckSquare, faCoffee } from '@fortawesome/free-solid-svg-icons'\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h2>Button组件</h2>\n        <div className=\"block buttons\">\n          <Button\n            size={ButtonSize.Small}\n            autoFocus\n            onClick={(e) => {\n              e.preventDefault();\n              // alert(\"123\");\n            }}\n            className=\"tok\"\n          >\n            hello\n          </Button>\n          <Button btnType={ButtonType.Primary}>Primary</Button>\n          <Button btnType={ButtonType.Dashed}>Dashed</Button>\n          <Button btnType={ButtonType.Default} size={ButtonSize.Large}>\n            Default\n          </Button>\n          <Button btnType={ButtonType.Danger} size={ButtonSize.Large}>\n            Danger\n          </Button>\n          <Button\n            btnType={ButtonType.Link}\n            href=\"http://www.baidu.com\"\n            target=\"_blank\"\n            size={ButtonSize.Large}\n          >\n            BaiduLink\n          </Button>\n          <Button btnType={ButtonType.Primary} disabled size={ButtonSize.Large}>\n            BaiduLink\n          </Button>\n        </div>\n        <h2>Alert组件</h2>\n        <div className=\"block alerts\">\n          <Alert type={AlertType.Success} message=\"Alert Success\" />\n          <Alert type={AlertType.Error} message=\"Alert Error\" />\n          <Alert type={AlertType.Info} message=\"Alert Info\" />\n          <Alert type={AlertType.Warning} message=\"Alert Warning\" />\n        </div>\n        <h2>Menu组件</h2>\n        <div className=\"block menus\">\n          <Menu defaultIndex={'0'} onSelect={(index) => console.log(index)}>\n            <MenuItem>项目1</MenuItem>\n            <MenuItem>项目2</MenuItem>\n            <MenuItem disabled>项目3</MenuItem>\n            <SubMenu title=\"dropdown\">\n                <MenuItem>dropdown1</MenuItem>\n                <MenuItem>dropdown2</MenuItem>\n                <MenuItem>dropdown3</MenuItem>\n            </SubMenu>\n          </Menu>\n          <Menu\n            defaultIndex={'0'}\n            onSelect={(index) => console.log(index)}\n            mode=\"vertical\"\n            defaultOpenSubMenus={['2']}\n          >\n            <MenuItem>项目1</MenuItem>\n            <MenuItem disabled>项目2</MenuItem>\n            <MenuItem>项目3</MenuItem>\n            <SubMenu title=\"dropdown\" >\n               <MenuItem>dropdown1</MenuItem>\n               <MenuItem>dropdown2</MenuItem>\n               <MenuItem>dropdown3</MenuItem>\n            </SubMenu>\n          </Menu>\n        </div>\n        <h2>选项卡组件</h2>\n        <div className=\"block tab\">\n           <Tabs defaultIndex={0} onSelect={(index)=>console.log(index)}>\n              <TabItem label=\"选项卡一\">this is tab1</TabItem>\n              <TabItem label=\"选项卡二\" disabled>this is tab2</TabItem>\n              <TabItem label=\"选项卡三\">this is tab3</TabItem>\n           </Tabs>\n        </div>\n        <h2>Icon组件</h2>\n        <Icon icon='coffee' theme=\"warning\" size=\"2x\"/>\n        <Icon icon='coffee' theme=\"danger\" size=\"3x\"/>\n        <Icon icon='arrow-down' theme=\"primary\" size=\"4x\"/>\n        <Icon icon='arrow-up' theme=\"success\" size=\"5x\"/>\n      </header>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}